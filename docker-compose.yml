version: '3.9'

services:
    app:
        build:
            context: .
            dockerfile: docker/php/Dockerfile
        container_name: meteopulse_app
        restart: unless-stopped
        working_dir: /var/www
        volumes:
            - .:/var/www
        environment:
            DB_HOST: db
            DB_PORT: 3306
            DB_DATABASE: meteopulse
            DB_USERNAME: meteopulse
            DB_PASSWORD: password
            REDIS_HOST: redis
            REDIS_PORT: 6380
            REDIS_PASSWORD: null
            MAIL_MAILER: smtp
            MAIL_HOST: mailhog
            MAIL_PORT: 1025
        depends_on:
            - db
            - redis
        networks:
            - meteopulse

    nginx:
        image: nginx:latest
        container_name: meteopulse_nginx
        restart: unless-stopped
        ports:
            - "80:80"
        volumes:
            - .:/var/www
            - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
            - ./docker/nginx/ssl:/etc/nginx/ssl
        depends_on:
            - app
        networks:
            - meteopulse

    db:
        image: mysql:8
        container_name: meteopulse_db
        restart: unless-stopped
        ports:
            - "3306:3306"
        environment:
            MYSQL_ROOT_PASSWORD: root
            MYSQL_DATABASE: meteopulse
            MYSQL_USER: meteopulse
            MYSQL_PASSWORD: password
            MYSQL_AUTH_PLUGIN: caching_sha2_password
        volumes:
            - dbdata:/var/lib/mysql
        networks:
            - meteopulse

    redis:
        image: redis:alpine
        container_name: meteopulse_redis
        restart: unless-stopped
        ports:
            - "6379:6379"
        environment:
            REDIS_PASSWORD: null
        networks:
            - meteopulse

    supervisor:
        build:
            context: .
            dockerfile: docker/supervisor/Dockerfile
        container_name: meteopulse_supervisor
        restart: unless-stopped
        working_dir: /var/www
        volumes:
            - .:/var/www
        depends_on:
            - app
            - db
        networks:
            - meteopulse

    mailhog:
        image: mailhog/mailhog
        container_name: meteopulse_mailhog
        restart: always
        ports:
            - "8025:8025"
            - "1025:1025"
        networks:
            - meteopulse

volumes:
    dbdata:

networks:
    meteopulse:
        driver: bridge
